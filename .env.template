# Admin credentials
# Admin Authentication Toggle
# Set to "true" to enable login for the admin page, "false" to disable.
ADMIN_AUTH_ENABLED=false

# Session Secret for encrypting admin session cookies
# MUST be a private string of at least 32 characters.
# Generate a strong one, e.g., using: openssl rand -hex 32
SESSION_SECRET=
ADMIN_USERNAME=
ADMIN_PASSWORD=

# Stripe API keys
# Public key for client-side Stripe.js integration
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=
# Secret key for server-side Stripe API calls
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=

# Neon Database URL
NEON_DATABASE_URL=

# Base URL for your application (e.g., http://localhost:3000 or your Vercel URL)
# Used for Stripe redirects and API calls from client-side if needed.
NEXT_PUBLIC_APP_URL=

# Secret for initializing the database via API (src/app/api/admin/init-db/route.ts)
# Keep this value secure, especially in production.
ADMIN_INIT_DB_SECRET=your-very-secret-key-for-db-init

# Secret for accessing protected admin data APIs (e.g., fetching events, user points)
# Keep this value secure, especially in production.
ADMIN_API_SECRET=your-admin-api-secret-key

# Publicly accessible version of the admin API secret for client-side calls (if needed and considered safe for your auth model)
# Alternatively, admin actions requiring secrets should be proxied via backend-to-backend calls or a proper auth system.
# For this project, we'll assume it can be public for dev, but in prod, you'd use a backend proxy or auth tokens.
NEXT_PUBLIC_ADMIN_API_SECRET=your-admin-api-secret-key

# CORS Configuration (for src/middleware.ts)
# Comma-separated list of allowed origins for API requests.
# Example: ALLOWED_ORIGINS=http://localhost:3001,https://your-frontend.com,app://my-mobile-app-origin
ALLOWED_ORIGINS=http://localhost:3000
